-- output/other.valibot.ts --
// Code generated by protoc-gen-valibot. DO NOT EDIT.
// source: other.proto

// eslint-disable
// biome-ignore format lint: 
import { intersect, object, partial, string } from 'valibot'

export const OtherFileValibot = () => intersect([object({

}), partial(object({
	name: string()
}))])

-- output/sample.valibot.ts --
// Code generated by protoc-gen-valibot. DO NOT EDIT.
// source: sample.proto

// eslint-disable
// biome-ignore format lint: 
import { any, array, intersect, minLength, number, object, partial, pipe, record, string, union } from 'valibot'

import { OtherFileValibot } from './other.valibot'

/** TestMessage is a test message. */
export const TestMessageValibot = () => intersect([object({
	id: number(),
 	email: pipe(array(string()), minLength(1))
}), partial(object({
	name: string(),
 	sameFile: SameFileValibot(),
 	otherFile: OtherFileValibot(),
 	map: record(string(), StructValibot())
})), partial(object({
	f1: string(),
 	f2: number()
})), partial(object({
	f3: string(),
 	f4: number()
})), union([object({
	f5: string()
}), object({
	f6: number()
})])])

export const SameFileValibot = () => intersect([object({

}), partial(object({
	name: string()
}))])

export const StructValibot = () => intersect([object({

}), partial(object({
	values: any()
}))])

